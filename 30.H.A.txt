# 1. Создайте класс Rectangle для представления прямоугольника.
# Класс должен иметь атрибуты width (ширина) и height (высота) со значениями по умолчанию, а также методы calculate_area()
# для вычисления площади прямоугольника и calculate_perimeter() для вычисления периметра прямоугольника.
# Переопределить методы __str__, __repr__.
# Затем создайте экземпляр класса Rectangle и выведите информацию о нем,его площадь и периметр.


class Rectangle:
    def __init__(self, width=1, height=1):
        self.width = width
        self.height = height

    def calculate_area(self):
        return self.width * self.height

    def calculate_perimeter(self):
        return 2 * (self.width + self.height)

    def __str__(self):
        return f"Rectangle(width={self.width}, height={self.height})"

    def __repr__(self):
        return f"Rectangle(width={self.width!r}, height={self.height!r})"

my_rectangle = Rectangle(width=5, height=10)

print(my_rectangle)
print("Площадь прямоугольника:", my_rectangle.calculate_area())
print("Периметр прямоугольника:", my_rectangle.calculate_perimeter())


--------------------------------------------------------------------------------

# 2. Создайте класс BankAccount для представления банковского счета. Класс должен иметь атрибуты account_number 
# (номер счета) и balance (баланс), а также методы deposit() для внесения денег на счет и withdraw() для снятия 
# денег со счета. Затем создайте экземпляр класса BankAccount, внесите на счет некоторую сумму и снимите часть денег. 
# Выведите оставшийся баланс. Не забудьте предусмотреть вариант, при котором при снятии баланс может стать меньше нуля. 
# В этом случае уходить в минус не будем, вместо чего будем возвращать сообщение "Недостаточно средств на счете".


class BankAccount:
    def __init__(self, account_number):
        self.account_number = account_number
        self.balance = 0

    def deposit(self, amount):
        if amount > 0:
            self.balance += amount
            print(f"Внесено: {amount}. Новый баланс: {self.balance}.")
        else:
            print("Сумма для внесения должна быть положительной.")

    def withdraw(self, amount):
        if amount > 0:
            if self.balance >= amount:
                self.balance -= amount
                print(f"Снято: {amount}. Остаток на счете: {self.balance}.")
            else:
                print("Недостаточно средств на счете.")
        else:
            print("Сумма для снятия должна быть положительной.")

    def get_balance(self):
        return self.balance
my_account = BankAccount("777")
my_account.deposit(1000)
my_account.withdraw(300)
my_account.withdraw(800)
print(f"Оставшийся баланс: {my_account.get_balance()}.")